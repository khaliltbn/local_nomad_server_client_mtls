name: Build, Push, and Test CLI Tool

on:
  workflow_dispatch:
    inputs:
      source_repo:
        description: 'guepard cli repository'
        required: true
        default: 'Guepard-Corp/guepard-cli'

jobs:
  build-and-push:
    name: Build and Push Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 1. Checkout source code from other repo 📂
        uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.source_repo }}
          path: 'source-code' 
          token: ${{ secrets.MY_PAT }} 

      - name: 2. Define Dockerfile in the pipeline 📝
        run: |
          cat <<EOF > ./source-code/Dockerfile
          FROM rust:1.82-slim AS builder
          RUN apt-get update && apt-get install -y build-essential libdbus-1-dev pkg-config 
          WORKDIR /usr/src/guepard-cli
          COPY Cargo.toml Cargo.lock ./
          RUN mkdir src && \
              echo "fn main() {}" > src/cli.rs && \
              cargo build --release --locked && \
              rm -rf src
          COPY src ./src
          RUN cargo build --release --locked
          FROM gcr.io/distroless/cc-debian12
          WORKDIR /usr/local/bin/
          COPY --from=builder /usr/src/guepard-cli/target/release/guepard .
          ENTRYPOINT ["./guepard"]
          EOF

      - name: 3. Log in to GitHub Container Registry 🔐
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 4. Build and push Docker image with cache 🏗️➡️
        uses: docker/build-push-action@v5
        with:
          context: ./source-code 
          push: true
          tags: ghcr.io/${{ github.repository }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test:
    name: Test CLI Tool
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: 1. Create a wrapper script for the CLI tool 래
        run: |
          # Create a local bin directory
          mkdir -p $HOME/bin
          # Create the wrapper script. It takes all arguments ($@) and passes them to 'docker run'
          echo '#!/bin/bash' > $HOME/bin/guepard
          echo 'docker run --rm ghcr.io/${{ github.repository }}:latest "$@"' >> $HOME/bin/guepard
          # Make the script executable
          chmod +x $HOME/bin/guepard
          # Add the local bin directory to the system PATH for all subsequent steps
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: 2. Test - Version Check 🧪
        run: guepard --version

      - name: 3. Test - Help Command 🧪
        run: guepard --help

      - name: 4. Test - Another Feature 🧪
        run: |
          echo "Running another test..."
          guepard some-command --with-flag
